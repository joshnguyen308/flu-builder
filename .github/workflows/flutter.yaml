name: flutter app build

on: [push]
env:
  FLUTTER_VERSION: "2.10.0"
  GRADLE_VERSION: "7.5.1"
  ANDROID_SDK_VERSION: "8512546"

jobs:
  Flutter-APK-Build:
    runs-on: ubuntu-latest
    steps:
    - name: update ubuntu repo 
      run: sudo apt-get update
    - name: install java jre
      run: sudo apt -y install openjdk-8-jre
    - name: install java jdk
      run: sudo apt -y install openjdk-8-jdk
    - name: install necessary packages
      run: sudo apt -y install apt-transport-https ca-certificates wget dirmngr gnupg software-properties-common unzip git wget
    - name: get flutter 
      run: wget https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${FLUTTER_VERSION}-stable.tar.xz
    - name: get gradle 
      run: wget https://downloads.gradle-dn.com/distributions/gradle-${GRADLE_VERSION}-bin.zip
    - name: get commandlinetools
      run: wget https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_VERSION}_latest.zip
    - name: unzip files
      run: tar -xf flutter_linux_${FLUTTER_VERSION}-stable.tar.xz
    - name: add repo home variable
      run: echo "REPO_HOME=$(pwd)" >> $GITHUB_ENV
    - name: unzip gradle 
      run: unzip gradle-${GRADLE_VERSION}-bin.zip
    - name: unzip commandlinetools
      run: unzip commandlinetools-linux-8512546_latest.zip
    - name: export repo home to runner
      run: echo "${REPO_HOME}/flutter/bin" >> $GITHUB_PATH
    - name: make android dir
      run: mkdir -p Android/cmdline-tools && mv cmdline-tools tools && mv tools Android/cmdline-tools
    - name: verify cmdline-tools
      run: ls -lha Android/cmdline-tools/tools
    - name: export android home 
      run: echo "ANDROID=${REPO_HOME}/Android" >> $GITHUB_ENV
    - name: export android home to runner
      run: |
            echo "$ANDROID/cmdline-tools/tools" >> $GITHUB_PATH
            echo "$ANDROID/cmdline-tools/tools/bin" >> $GITHUB_PATH
            echo "$ANDROID/platform-tools" >> $GITHUB_PATH
    - name: set android sdk env and path 
      run: |
            echo "ANDROID_SDK=${REPO_HOME}/Android" >> $GITHUB_ENV
            echo "$ANDROID_SDK" >> $GITHUB_PATH

    - name: set pipefail
      run: set +o pipefail

    - name: sdkmanager setup 
      run: |
            yes | sdkmanager --sdk_root=${ANDROID_HOME} --licenses >/dev/null
            sdkmanager --install "platforms;android-31" "build-tools;30.0.3"

    - name: check sdk 
      run: sdkmanager --list_installed
    - name: setup gradle 
      run: mkdir gradle && mv gradle-7.5.1 gradle && sudo mv gradle /opt
    - name: set gradle env and path 
      run: |
            echo "GRADLE_HOME=/opt/gradle/gradle-7.5.1/" >> $GITHUB_ENV
            echo "$GRADLE_HOME" >> $GITHUB_PATH
    - name: echo env
      run: |
            echo $GRADLE_HOME
            echo $ANDROID_SDK
    - name: save to artifact 
      uses: actions/upload-artifact@v3
      with:
          name: intranet apk 
          path: output/test/code-coverage.html
    - name: install ssh key
      run: sudo apt install -y openssh-client
    - name: setup private key
      run: mkdir -p $HOME/.ssh && echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
    - name: knows hosts
      run: if [ ! -n "$(grep "^github.com " ~/.ssh/known_hosts)" ]; then ssh-keyscan github.com >> ~/.ssh/known_hosts 2>/dev/null; fi
    - name: clone application
      run: git clone git@github.com:ottoint/oi_intranet_app.git
    - name: install depends and build 
      run: cd oi_intranet_app && flutter pub get && flutter build apk

